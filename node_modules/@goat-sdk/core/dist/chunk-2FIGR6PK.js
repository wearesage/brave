"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkATIUG4XDjs = require('./chunk-ATIUG4XD.js');var _chunk6KPO4VDXjs = require('./chunk-6KPO4VDX.js');var _chunk2BFBJULLjs = require('./chunk-2BFBJULL.js');var _chunkEI7MMDWYjs = require('./chunk-EI7MMDWY.js');var p=class{static{_chunkEI7MMDWYjs.a.call(void 0, this,"PluginBase")}constructor(o,r){this.name=o,this.toolProviders=r}getTools(o){let r=[];for(let n of this.toolProviders){let a=Reflect.getMetadata(c,n.constructor);if(!a){let e=n.constructor.name;console.warn(e==="Function"?"Detected a non-instance tool provider. Please ensure you're passing instances of your tool providers, by using `new MyToolProvider(..)`":`No tools found for ${e}. Please ensure you're using the '@Tool' decorator to expose your tools.`);continue}for(let e of a.values())r.push(_chunk2BFBJULLjs.b.call(void 0, {name:e.name,description:e.description,parameters:e.parameters.schema},s=>{let l=[];return e.walletClient&&(l[e.walletClient.index]=o),l[e.parameters.index]=s,e.target.apply(n,l)}))}return r}};require('reflect-metadata');var c=Symbol("goat:tool");function F(t){return(o,r,n)=>{let{parameters:a,walletClient:e}=h(o,r),s=Reflect.getMetadata(c,o.constructor)||new Map;return s.set(r,{target:n.value,name:_nullishCoalesce(t.name, () => (_chunkATIUG4XDjs.a.call(void 0, r))),description:t.description,parameters:a,...e?{walletClient:e}:{}}),Reflect.defineMetadata(c,s,o.constructor),o}}_chunkEI7MMDWYjs.a.call(void 0, F,"Tool");function h(t,o){let r=t instanceof Object?t.constructor.name:void 0,n=`Method '${o}'${r?` on class '${r}'`:""}`,a="Tool methods must have at least one parameter that is a Zod schema class created with the createToolParameters function.",e=Reflect.getMetadata("design:paramtypes",t,o);if(e==null)throw new Error(`Failed to get parameters for ${n}.`);if(e.length===0)throw new Error(`${n} has no parameters. ${a}`);if(e.length>2)throw new Error(`${n} has ${e.length} parameters. ${a}`);let s=e.find(x);if(s==null)throw new Error(`${n} has no parameters parameter.

1.) ${a}

2.) Ensure that you are not using 'import type' for the parameters.`);let l=e.find(w);return{parameters:{index:e.indexOf(s),schema:s.prototype.constructor.schema},...l?{walletClient:{index:e.indexOf(l)}}:{}}}_chunkEI7MMDWYjs.a.call(void 0, h,"validateMethodParameters");function w(t){return!t||!t.prototype?!1:t===_chunk6KPO4VDXjs.a?!0:t.prototype instanceof _chunk6KPO4VDXjs.a}_chunkEI7MMDWYjs.a.call(void 0, w,"isWalletClientParameter");function x(t){return _optionalChain([t, 'access', _ => _.prototype, 'optionalAccess', _2 => _2.constructor, 'optionalAccess', _3 => _3.schema])!=null}_chunkEI7MMDWYjs.a.call(void 0, x,"isParametersParameter");exports.a = c; exports.b = F; exports.c = p;
