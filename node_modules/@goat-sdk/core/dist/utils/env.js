"use strict";Object.defineProperty(exports, "__esModule", {value: true});var _chunkEI7MMDWYjs = require('../chunk-EI7MMDWY.js');var _zod = require('zod');var l=_chunkEI7MMDWYjs.a.call(void 0, s=>{let e=s.filter(n=>!process.env[n]);if(e.length>0)throw new Error(`Missing required environment variables: ${e.join(", ")}
See docs/environment-variables.mdx for setup instructions`)},"validateEnvVars"),c= exports.envSchemas ={openai:_zod.z.string().startsWith("sk-"),evmPrivateKey:_zod.z.string().startsWith("0x").length(66),solanaPrivateKey:_zod.z.string().regex(/^[1-9A-HJ-NP-Za-km-z]{32,44}$/),rpcUrl:_zod.z.string().url(),apiKey:_zod.z.string().min(32)},f= exports.validateEnvVarFormats =_chunkEI7MMDWYjs.a.call(void 0, s=>{let e=[];for(let[n,a]of Object.entries(s)){let o=process.env[n];if(!o)continue;let i=c[a].safeParse(o);i.success||e.push(`Invalid format for ${n}: ${i.error.message}`)}if(e.length>0)throw new Error(`Environment variable format validation failed:
${e.join(`
`)}
See docs/environment-variables.mdx for correct formats`)},"validateEnvVarFormats");exports.envSchemas = c; exports.validateEnvVarFormats = f; exports.validateEnvVars = l;
